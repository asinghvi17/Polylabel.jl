var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Polylabel","category":"page"},{"location":"#Polylabel","page":"Home","title":"Polylabel","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Polylabel.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Polylabel]","category":"page"},{"location":"#Polylabel.Polylabel","page":"Home","title":"Polylabel.Polylabel","text":"Polylabel.jl\n\nThis package implements an algorithm to find the pole of inaccessibility  of a polygon, the most distant internal point from the polygon outline.  \n\nThis algorithm was originally written (and taken from) mapbox/polylabel \n\nyou can find a lot more information there!\n\nThe package is built on top of the GeoInterface, and is built to work with  any polygons or multipolygon object which implements the GeoInterface,  specifically the functions GeoInterface.contains, GeoInterface.distance,  and GeoInterface.centroid.  \n\nThe main entry point is the polylabel(input; rtol, atol) function.   It returns a 2-Tuple of floats, representing the x and y  coordinates of the pole of inaccessibility that was computed.\n\n\n\n\n\n","category":"module"},{"location":"#Polylabel.Cell","page":"Home","title":"Polylabel.Cell","text":"Cell(x, y, half_size, polygon)\n\nComparison operators operate on the max_distance field.\n\n\n\n\n\n","category":"type"},{"location":"#Polylabel.polylabel-Tuple{Any}","page":"Home","title":"Polylabel.polylabel","text":"polylabel(polygon::Polygon; rtol::Real = 0.01, atol::Union{Nothing, Real} = nothing)::NTuple{2, Float64}\npolylabel(multipoly::MultiPolygon; rtol::Real = 0.01, atol::Union{Nothing, Real} = nothing)::NTuple{2, Float64}\n\npolylabel finds the pole of inaccessibility of the given polygon or multipolygon, and returns its coordinates as a 2-Tuple of (x, y).  Tolerances can be specified.  \n\nAny geometry which expresses the GeoInterface.jl polygon or multipolygon traits can be passed to this method, so long as it implements the GeoInterface methods extent, contains, and centroid, in addition to the polygon coordinates, getexterior, and gethole interfaces.\n\nrtol is relative tolerance, atol is absolute tolerance (in the same vein as Base.isapprox). When atol is provided, it overrides rtol.\n\n!!!warning     The performance of this function is still being actively improved; specifically the signed distance     function needs some optimization.  Until then, this will be much slower than the equivalent in Python/JS.\n\n\n\n\n\n","category":"method"},{"location":"#Polylabel.signed_distance-Tuple{Any, Any, Any}","page":"Home","title":"Polylabel.signed_distance","text":"signed_distance(geom, x::Real, y::Real)::Float64\n\nCalculates the signed distance from the geometry geom to the point defined by (x, y).  Points within geom have a negative distance, and points outside of geom have a positive distance.\n\nIf geom is a MultiPolygon, then this function returns the maximum distance  to any of the polygons in geom.\n\n\n\n\n\n","category":"method"}]
}
